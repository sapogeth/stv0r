// src/components/NicknameOwnershipManager.tsx

import React, { useState, useEffect } from 'react';
import { useCurrentAccount } from '@mysten/dapp-kit';
import { 
  getNicknameOwnership, 
  setActiveNickname, 
  type NicknameOwnership 
} from '../services/nicknameOwnershipService';
import '../styles/NicknameManager.css';

const NicknameOwnershipManager: React.FC = () => {
  const currentAccount = useCurrentAccount();
  const [ownership, setOwnership] = useState<NicknameOwnership | null>(null);
  const [loading, setLoading] = useState(true);
  const [changingActive, setChangingActive] = useState(false);
  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);

  useEffect(() => {
    if (currentAccount?.address) {
      loadOwnership();
    }
  }, [currentAccount]);

  const loadOwnership = () => {
    if (!currentAccount?.address) return;
    
    setLoading(true);
    try {
      const ownershipData = getNicknameOwnership(currentAccount.address);
      setOwnership(ownershipData);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–ª–∞–¥–µ–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–∞–º–∏:', error);
      showMessage('error', '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –Ω–∏–∫–Ω–µ–π–º–∞—Ö');
    } finally {
      setLoading(false);
    }
  };

  const handleSetActiveNickname = async (nickname: string) => {
    if (!currentAccount?.address || changingActive) return;
    
    setChangingActive(true);
    try {
      const result = await setActiveNickname(currentAccount.address, nickname);
      
      if (result.success) {
        showMessage('success', result.message);
        loadOwnership(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
      } else {
        showMessage('error', result.message);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–º–µ–Ω—ã –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –Ω–∏–∫–Ω–µ–π–º–∞:', error);
      showMessage('error', '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ –Ω–∏–∫–Ω–µ–π–º–∞');
    } finally {
      setChangingActive(false);
    }
  };

  const showMessage = (type: 'success' | 'error', text: string) => {
    setMessage({ type, text });
    setTimeout(() => setMessage(null), 5000);
  };

  if (!currentAccount) {
    return (
      <div className="nickname-manager">
        <p>–ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–∞–º–∏</p>
      </div>
    );
  }

  if (loading) {
    return (
      <div className="nickname-manager">
        <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∏–∫–Ω–µ–π–º–æ–≤...</div>
      </div>
    );
  }

  if (!ownership) {
    return (
      <div className="nickname-manager">
        <p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –Ω–∏–∫–Ω–µ–π–º–∞—Ö</p>
        <button onClick={loadOwnership} className="retry-btn">
          –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
        </button>
      </div>
    );
  }

  return (
    <div className="nickname-manager">
      <div className="nickname-header">
        <h3>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞–º–∏</h3>
        <div className="nickname-stats">
          <span className="owned-count">
            {ownership.ownedNicknames.length}/{4} –Ω–∏–∫–Ω–µ–π–º–æ–≤
          </span>
          {ownership.canBuyMore && (
            <span className="can-buy-more">
              –ú–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –µ—â–µ {ownership.remainingSlots}
            </span>
          )}
        </div>
      </div>

      {message && (
        <div className={`message ${message.type}`}>
          {message.text}
        </div>
      )}

      {ownership.ownedNicknames.length === 0 ? (
        <div className="no-nicknames">
          <p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –Ω–∏–∫–Ω–µ–π–º–æ–≤ NFT</p>
          <p>–ö—É–ø–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –≤ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!</p>
        </div>
      ) : (
        <div className="nicknames-list">
          <h4>–í–∞—à–∏ –Ω–∏–∫–Ω–µ–π–º—ã:</h4>
          {ownership.ownedNicknames.map((nickname) => (
            <div 
              key={nickname} 
              className={`nickname-item ${nickname === ownership.activeNickname ? 'active' : ''}`}
            >
              <div className="nickname-info">
                <span className="nickname-name">@{nickname}</span>
                {nickname === ownership.activeNickname && (
                  <span className="active-badge">–ê–∫—Ç–∏–≤–Ω—ã–π</span>
                )}
              </div>
              
              {nickname !== ownership.activeNickname && (
                <button
                  onClick={() => handleSetActiveNickname(nickname)}
                  disabled={changingActive}
                  className="set-active-btn"
                >
                  {changingActive ? '–ò–∑–º–µ–Ω–µ–Ω–∏–µ...' : '–°–¥–µ–ª–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–º'}
                </button>
              )}
            </div>
          ))}
        </div>
      )}

      <div className="nickname-actions">
        <button 
          onClick={loadOwnership} 
          className="refresh-btn"
          disabled={loading}
        >
          {loading ? '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ...' : '–û–±–Ω–æ–≤–∏—Ç—å'}
        </button>
        
        {ownership.canBuyMore && (
          <div className="buy-more-info">
            <p>üí° –í—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –µ—â–µ {ownership.remainingSlots} –Ω–∏–∫–Ω–µ–π–º(–æ–≤) –≤ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–µ</p>
          </div>
        )}
        
        {!ownership.canBuyMore && (
          <div className="limit-reached">
            <p>üîí –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –Ω–∏–∫–Ω–µ–π–º–æ–≤ (4/4)</p>
            <p>–ü—Ä–æ–¥–∞–π—Ç–µ –Ω–∏–∫–Ω–µ–π–º, —á—Ç–æ–±—ã –æ—Å–≤–æ–±–æ–¥–∏—Ç—å –º–µ—Å—Ç–æ –¥–ª—è –Ω–æ–≤–æ–≥–æ</p>
          </div>
        )}
      </div>

      <div className="nickname-help">
        <h5>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</h5>
        <ul>
          <li>–ö–∞–∂–¥—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤–ª–∞–¥–µ—Ç—å –º–∞–∫—Å–∏–º—É–º 4 –Ω–∏–∫–Ω–µ–π–º–∞–º–∏</li>
          <li>–û–¥–∏–Ω –Ω–∏–∫–Ω–µ–π–º –≤—Å–µ–≥–¥–∞ –∞–∫—Ç–∏–≤–Ω—ã–π - –æ–Ω –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ —á–∞—Ç–∞—Ö –∏ –ø—Ä–æ—Ñ–∏–ª–µ</li>
          <li>–í—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å—Å—è –º–µ–∂–¥—É —Å–≤–æ–∏–º–∏ –Ω–∏–∫–Ω–µ–π–º–∞–º–∏</li>
          <li>–ù–∏–∫–Ω–µ–π–º—ã –º–æ–∂–Ω–æ –ø—Ä–æ–¥–∞–≤–∞—Ç—å –≤ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–µ</li>
        </ul>
      </div>
    </div>
  );
};

export default NicknameOwnershipManager;
